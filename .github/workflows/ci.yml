name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Nightly at 06:00 UTC
    - cron: '0 6 * * *'

jobs:
  tests:
    name: CI (smoke on PR; full on push) â€” shard ${{ matrix.shard }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: ['1/3','2/3','3/3']   # ðŸ‘ˆ Matrix shown in Actions

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Run smoke only on PRs to keep CI fast; run all on pushes
      - name: Run tests (sharded)
        shell: bash
        run: |
          CMD="npx playwright test --shard=${{ matrix.shard }}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CMD="$CMD --grep @smoke"
          fi
          echo "Running: $CMD"
          $CMD

      # Upload artifacts even if tests fail
      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.shard }}
          path: playwright-report
          retention-days: 7

      - name: Upload traces & screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.shard }}
          path: test-results
          retention-days: 7

  nightly:
    name: Nightly @regression â€” shard ${{ matrix.shard }}
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: ['1/3','2/3','3/3']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npx playwright install --with-deps
      - name: Run @regression (sharded)
        run: npx playwright test --grep @regression --shard=${{ matrix.shard }}

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-playwright-report-${{ matrix.shard }}
          path: playwright-report
          retention-days: 14

      - name: Upload traces & screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-test-results-${{ matrix.shard }}
          path: test-results
          retention-days: 14
